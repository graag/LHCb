/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooAsymCassandra3.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 


 RooAsymCassandra3::RooAsymCassandra3(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _mean,
                        RooAbsReal& _tau_1,
                        RooAbsReal& _tau_2,
                        RooAbsReal& _tau_3,
                        RooAbsReal& _tau_4,
                        RooAbsReal& _tau_5,
                        RooAbsReal& _tau_6) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   mean("mean","mean",this,_mean),
   tau_1("tau_1","tau_1",this,_tau_1),
   tau_2("tau_2","tau_2",this,_tau_2),
   tau_3("tau_3","tau_3",this,_tau_3),
   tau_4("tau_4","tau_4",this,_tau_4),
   tau_5("tau_5","tau_5",this,_tau_5),
   tau_6("tau_6","tau_6",this,_tau_6)
 { 
 } 


 RooAsymCassandra3::RooAsymCassandra3(const RooAsymCassandra3& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   mean("mean",this,other.mean),
   tau_1("tau_1",this,other.tau_1),
   tau_2("tau_2",this,other.tau_2),
   tau_3("tau_3",this,other.tau_3),
   tau_4("tau_4",this,other.tau_4),
   tau_5("tau_5",this,other.tau_5),
   tau_6("tau_6",this,other.tau_6)
 { 
 } 



 Double_t RooAsymCassandra3::evaluate() const 
 {
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   Double_t tau_a = tau_1;
   Double_t tau_b = tau_2;
   Double_t tau_c = tau_3;
   if( x-mean > 0 ) {
       tau_a = tau_4;
       tau_b = tau_5;
       tau_c = tau_6;
   }
   Double_t y1 = exp(-abs(x-mean)/tau_a)/tau_a;
   Double_t y2 = exp(-abs(x-mean)/tau_b)/tau_b;
   Double_t y3 = exp(-abs(x-mean)/tau_c)/tau_c;
   if( y3 > y2 && y3 > y1)
       return y3;
   else if( y2 > y1 )
       return y2;
   return y1;
 }

